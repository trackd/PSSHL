#
# PSSHL
# För den som önskar finns möjlighet att ta del av nyheter, statistik, video och matchinformation via SHL:s öppna API.
# Kontakta upport@shl.se med önskemål om detta och för eventuella frågor.
# Vid förfrågan om åtkomst, vänligen ange tänkt syfte och användningsområde för ditt nyttjande av API:et.
# Allmänna villkor</h1> <p>All användning av SHL:s öppna API kräver godkännande av gällande allmänna villkor.
# Dokumentation av API:et
# All dokumentation kring API:et finns samlad på denna sida.
# Autentisering
# All kommunikation med API:et kräver att konsumenten autentiserar sig.
# Denna autentisering sker enligt OAuth2.
# Ytterligare detaljer kring autentiseringsförfarandet kommuniceras vid godkännande av förfrågan om åtkomst,
# http://doc.openapi.shl.se/
# Version: 1.0
# Contact: support@shl.se
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

function Get-FunctionsToExport {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $true)]
        [ValidateNotNullOrEmpty()]
        [Alias('FullName')]
        $Path
    )

    Process {
        $Token = $null
        $ParserErr = $null

        $Ast = [System.Management.Automation.Language.Parser]::ParseFile(
            $Path,
            [ref]$Token,
            [ref]$ParserErr
        )

        if ($ParserErr) {
            throw $ParserErr
        } else {
            foreach ($name in 'Begin', 'Process', 'End') {
                foreach ($Statement in $Ast."${name}Block".Statements) {
                    if (
                        [String]::IsNullOrWhiteSpace($Statement.Name) -or
                        $Statement.Extent.ToString() -notmatch
                        ('function\W+{0}' -f $Statement.Name)
                    ) {
                        continue
                    }

                    $Statement.Name
                }
            }
        }
    }
}

$ScriptDir = Split-Path $script:MyInvocation.MyCommand.Path
$FunctionPath = 'Api', 'Model', 'Client' | ForEach-Object { Join-Path "$ScriptDir\src\PSSHL\" $_ }

$Manifest = @{
    Path              = "$ScriptDir\src\PSSHL\PSSHL.psd1"

    Author            = 'OpenAPI Generator Team'
    CompanyName       = 'openapitools.org'
    Description       = 'PSSHL - the PowerShell module for SHL'

    ModuleVersion     = '0.1.0'

    RootModule        = 'PSSHL.psm1'
    Guid              = '{1E7214FD-3478-42F8-BA14-11FF8771B5BD}' # Has to be static, otherwise each new build will be considered different module

    PowerShellVersion = '6.2'

    FunctionsToExport = $FunctionPath | Get-ChildItem -Filter *.ps1 | Get-FunctionsToExport

    VariablesToExport = @()
    AliasesToExport   = @()
    CmdletsToExport   = @()

}

New-ModuleManifest @Manifest
